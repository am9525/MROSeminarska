//
// Generated file, do not edit! Created by nedtool 5.0 from IP_Message.msg.
//

#ifndef __IP_MESSAGE_M_H
#define __IP_MESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>IP_Message.msg:17</tt> by nedtool.
 * <pre>
 * message IP_Message
 * {
 *     string IP_source;
 *     string IP_destination;
 *     string Content;
 * }
 * </pre>
 */
class IP_Message : public ::omnetpp::cMessage
{
  protected:
    ::omnetpp::opp_string IP_source;
    ::omnetpp::opp_string IP_destination;
    ::omnetpp::opp_string Content;

  private:
    void copy(const IP_Message& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const IP_Message&);

  public:
    IP_Message(const char *name=nullptr, int kind=0);
    IP_Message(const IP_Message& other);
    virtual ~IP_Message();
    IP_Message& operator=(const IP_Message& other);
    virtual IP_Message *dup() const {return new IP_Message(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getIP_source() const;
    virtual void setIP_source(const char * IP_source);
    virtual const char * getIP_destination() const;
    virtual void setIP_destination(const char * IP_destination);
    virtual const char * getContent() const;
    virtual void setContent(const char * Content);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const IP_Message& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, IP_Message& obj) {obj.parsimUnpack(b);}


#endif // ifndef __IP_MESSAGE_M_H

